version: '3.8'
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
#  kafka-ui:
#    image: provectuslabs/kafka-ui
#    container_name: kafka-ui
#    ports:
#      - "8989:8080"
#    environment:
#      - KAFKA_CLUSTERS_0_NAME=local
#      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
#      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
#    restart: always
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    restart: always
    environment:
#      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: concertticket
      MYSQL_USER: root
      MYSQL_PASSWORD: 1234
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql-data:/var/lib/mysql
  redis:
    image: redis:alpine
    container_name: redis-container
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

volumes:
  mysql-data:
  redis-data: