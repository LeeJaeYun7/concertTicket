
// jar로 생성 (기본적으로 라이브러리 모듈에서 jar는 활성화 상태)
jar {
    enabled = true
}

bootJar {
    enabled = true
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.28'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation group: 'org.springframework.data', name: 'spring-data-jpa', version: '3.3.4'

    // Spring Boot 로깅 (자동 포함됨)
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation group: 'org.springframework', name: 'spring-web', version: '6.1.13'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.16'

    implementation group: 'org.apache.tomcat.embed', name: 'tomcat-embed-core', version: '10.1.30'
    implementation group: 'org.springframework', name: 'spring-context', version: '6.1.13'
    implementation group: 'org.springframework', name: 'spring-webmvc', version: '6.1.13'

    implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '3.2.4'

    // AOP 관련 의존성
    implementation 'org.aspectj:aspectjweaver:1.9.7'
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // Redisson 라이브러리 추가
    implementation 'org.redisson:redisson-spring-boot-starter:3.18.0'

    // OpenAPI 관련 의존성
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    implementation 'org.projectlombok:lombok:1.18.28'

    api project(':concert-reservation-domain')
}

task wrapper(type: Wrapper) {
    gradleVersion = '8.10.2' // 루트 프로젝트의 Gradle 버전에 맞춰 설정
}

task prepareKotlinBuildScriptModel {

}

springBoot {
    mainClass = 'concert.interfaces.ConcertApplication'
}